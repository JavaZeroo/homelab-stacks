version: "3.9"

x-env: &common-env
  PUID: "${PUID:-1000}"
  PGID: "${PGID:-1000}"
  TZ:   "${TZ:-Asia/Shanghai}"

x-restart: &restart { restart: unless-stopped }
x-logging: &logging
  logging:
    driver: json-file
    options: { max-size: "10m", max-file: "3" }

services:
  moviepilot:
    image: jxxghp/moviepilot-v2:latest
    container_name: moviepilot-v2
    hostname: moviepilot-v2
    environment:
      <<: *common-env
      NGINX_PORT: "3000"
      PORT: "3001"
      SUPERUSER: "${MOVIEPILOT_SUPERUSER:-admin}"
      DB_TYPE: postgresql
      DB_POSTGRESQL_HOST: postgresql
      DB_POSTGRESQL_PORT: 5432
      DB_POSTGRESQL_DATABASE: moviepilot
      DB_POSTGRESQL_USERNAME: moviepilot
      DB_POSTGRESQL_PASSWORD: "${MOVIEPILOT_DB_PASSWORD:-pg_password}"
      CACHE_BACKEND_TYPE: redis
      CACHE_BACKEND_URL: "redis://:${MOVIEPILOT_REDIS_PASSWORD:-redis_password}@redis:6379"
    volumes:
      - "${MEDIA_STACK_ROOT:-/data/apps}/moviepilot/config:/config"
      - "${MEDIA_STACK_ROOT:-/data/apps}/moviepilot/cache:/moviepilot/.cache/ms-playwright"
      - "${MEDIA_DOWNLOADS_DIR:-/data/apps/qbittorrent/downloads}:/downloads"
      - "${MEDIA_STACK_ROOT:-/data/apps}/qbittorrent/config/qBittorrent/data/BT_backup:/BT_backup"
      - "${MEDIA_STACK_ROOT:-/data/apps}/transmission/config/torrents:/torrents"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "${MOVIEPILOT_PORT:-3000}:3000"
      - "${MOVIEPILOT_API_PORT:-3001}:3001"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    <<: [*restart, *logging]

  redis:
    image: redis:alpine
    command: redis-server --save 600 1 --requirepass ${MOVIEPILOT_REDIS_PASSWORD:-redis_password}
    volumes:
      - "${MEDIA_STACK_ROOT:-/data/apps}/moviepilot/redis:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    <<: [*restart, *logging]

  postgresql:
    image: postgres:alpine
    environment:
      POSTGRES_DB: moviepilot
      POSTGRES_USER: moviepilot
      POSTGRES_PASSWORD: "${MOVIEPILOT_DB_PASSWORD:-pg_password}"
    volumes:
      - "${MEDIA_STACK_ROOT:-/data/apps}/moviepilot/postgresql:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U moviepilot -d moviepilot"]
      interval: 10s
      timeout: 5s
      retries: 5
    <<: [*restart, *logging]
